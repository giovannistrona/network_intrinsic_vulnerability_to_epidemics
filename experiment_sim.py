from various_functions import*
from scipy.misc import comb



out=open('results_sim.csv','w')
out.write('conn,rec,graph_type,parameters,susc_dist,eig,vvv,eee,VU,diam,clust,rob,rob_max,I,II,III,IV,V,resistance,death,transmission_rate\n')
out.close()
modes=['unif']#['equi','norm','lognorm','lognorm_rev','deg','deg_rev','unif']
RES=[]
while len(RES)<10000:
	try:
		g,ty,pars,eig,vvv,eee,diam,clust,rob,rob_max,rec=make_g(randrange(1,5))
		conn=eee/(comb(vvv,2)*2.0)
		l=make_list(g)
		susc_mode=sample(modes,1)[0]
		susc_=make_susc(l,susc_mode)
		resistance=randrange(99)/100.0
		death=randrange(1,101)/100.0
		tr=random()
		I,II,III,IV,V,VU=ep(l,susc_,resistance,death,tr)
		RES.append([conn,rec,ty,pars,susc_mode,eig,vvv,eee,VU,diam,clust,rob,rob_max,I,II,III,IV,V,resistance,death,tr])
		print RES[-1]
		out=open('results_sim.csv','a')
		out.write(','.join(map(str,RES[-1]))+'\n')
		out.close()
	except:
		pass



#same experiment, but with normal distribution of node susceptibility

out=open('results_sim_norm.csv','w')
out.write('conn,rec,graph_type,parameters,susc_dist,eig,vvv,eee,VU,diam,clust,rob,rob_max,I,II,III,IV,V,resistance,death,transmission_rate\n')
out.close()
modes=['norm']#['equi','norm','lognorm','lognorm_rev','deg','deg_rev','unif']
RES=[]
while len(RES)<10000:
	try:
		g,ty,pars,eig,vvv,eee,diam,clust,rob,rob_max,rec=make_g(randrange(1,5))
		conn=eee/(comb(vvv,2)*2.0)
		l=make_list(g)
		susc_mode=sample(modes,1)[0]
		susc_=make_susc(l,susc_mode)
		resistance=randrange(99)/100.0
		death=randrange(1,101)/100.0
		tr=random()
		I,II,III,IV,V,VU=ep(l,susc_,resistance,death,tr)
		RES.append([conn,rec,ty,pars,susc_mode,eig,vvv,eee,VU,diam,clust,rob,rob_max,I,II,III,IV,V,resistance,death,tr])
		print RES[-1]
		out=open('results_sim_norm.csv','a')
		out.write(','.join(map(str,RES[-1]))+'\n')
		out.close()
	except:
		pass

