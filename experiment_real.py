from various_functions import*
from scipy.misc import comb
from os import listdir
from load import csv_

out=open('results_real.csv','w')
out.write('conn,rec,graph_type,parameters,susc_dist,eig,vvv,eee,VU,diam,clust,rob,rob_max,I,II,III,IV,V,resistance,death,transmission_rate\n')
out.close()

modes=['equi'] # select the distribution from which the individual node susceptibility is drawn; alternatives choices are: 'norm','lognorm','lognorm_rev','deg','deg_rev','unif'



RES=[]

fff=listdir('./vole_networks')
while len(RES)<10000:
	ff=sample(fff,1)[0]	
	g=csv_('./vole_networks/'+ff)
	f_rec=[i[::-1] for i in g]
	g+=f_rec
	g=[map(int,i) for i in g]
	b=Graph.TupleList(g,directed=True)
	vvv,eee,diam,clust=b.vcount(),b.ecount(),b.diameter(),b.transitivity_undirected()
	eig=GH(b)
	rob,rob_max=R_pr(g)
	rec=1
	conn=eee/(comb(vvv,2)*2.0)
	l=make_list(g)
	susc_mode=sample(modes,1)[0]
	susc_=make_susc(l,susc_mode)
	resistance=randrange(99)/100.0
	death=randrange(1,101)/100.0
	ty='REAL'
	pars='null'
	tr=random()
	I,II,III,IV,V,VU=ep(l,susc_,resistance,death,tr)
	RES.append([conn,rec,ty,pars,susc_mode,float(eig),vvv,eee,VU,diam,clust,rob,rob_max,I,II,III,IV,V,resistance,death,tr])
	print RES[-1]
	out=open('results_real.csv','a')
	out.write(','.join(map(str,RES[-1]))+'\n')
	out.close()


